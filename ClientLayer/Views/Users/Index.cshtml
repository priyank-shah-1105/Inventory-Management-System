@using Client
@using CommonLayer
@using DataLayer.DatabaseModel
@using Kendo.Mvc.UI



<div class="row grid">
    <div class="col-md-12">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <i class="fa fa-user"></i>
                    Users
                </h3>
            </div>
            <div class="panel-body">
                @(Html.Kendo().Grid<UsersMaster>()
                      .Name("grid")
                      .Columns(columns =>
                      {
                          columns.Command(command =>
                          {
                              command.Edit().Text(" ").UpdateText(" ").CancelText(" ");
                              command.Destroy().Text(" ");
                          })
                              .Title("Action")
                              .HtmlAttributes(CommonSettings.ActionCenterColumnStyleWithCanEdit).HeaderHtmlAttributes(CommonSettings.ActionCenterColumnStyleWithCanEdit);
                          columns.Bound(d => d.Name).Title("Name");
                          columns.ForeignKey(p => p.BranchId, (System.Collections.IEnumerable)ViewBag.Branch, "BranchId", "Name").Title("Branch");
                          columns.Bound(d => d.Email).Title("Email");
                          columns.Bound(d => d.MobileNo).Title("Mobile #");
                          columns.Bound(d => d.Username).Title("Username");
                          columns.Bound(d => d.IsActive).Title("Status")
                              .ClientTemplate(Html.SetStatusClientTemplate("IsActive", ControllerName.Branch, "ChangeStatus",
                                  "id=#= UserId #", "#= UserId #", "grid", "User")).HtmlAttributes(CommonSettings.StatusColumnStyle)
                              .HeaderHtmlAttributes(CommonSettings.StatusColumnStyle);

                      })
                      .Editable(editable =>
                      {
                          editable.Mode(GridEditMode.PopUp);
                          editable.DisplayDeleteConfirmation("Are you sure you want to delete the user?");
                      })
                               .ToolBar(toolbar => toolbar.Create().Text("Add user"))
                      .Pageable()
                      .Filterable(filterable => filterable
                        .Extra(true)
                        .Operators(ops =>
                            ops.ForString(str => str.Clear()
                                                    .Contains("Contains")
                                                    .StartsWith("Starts with")
                                                    .EndsWith("Ends with")
                                                    .IsEqualTo("Is equal to"))
                        ))
                      .Sortable(sortable => sortable.AllowUnsort(false))
                      .Events(grid => grid.Edit("edit"))
                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .ServerOperation(false)
                          .PageSize(CommonHelper.PageSize)
                          .Events(events => events.Error("onError"))
                          .Model(model => model.Id(d => d.UserId))
                                  .Read(read => read.Action(ActionName.KendoRead, ControllerName.Users))
                                  .Destroy(delete => delete.Action(ActionName.KendoDestroy, ControllerName.Users))
                                  .Create(update => update.Action(ActionName.KendoSave, ControllerName.Users))
                          .Update(update => update.Action(ActionName.KendoSave, ControllerName.Users))

                      ))
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function edit(e) {
        if (e.model.isNew()) {
            e.model.set("IsActive", true);
        }
    }
</script>
