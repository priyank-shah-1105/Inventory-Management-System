//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.DatabaseModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class StockEntities : DbContext
    {
        public StockEntities()
            : base("name=StockEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BranchMaster> BranchMasters { get; set; }
        public DbSet<ItemMaster> ItemMasters { get; set; }
        public DbSet<PartyMaster> PartyMasters { get; set; }
        public DbSet<UsersMaster> UsersMasters { get; set; }
        public DbSet<UnitMaster> UnitMasters { get; set; }
        public DbSet<InvoiceMaster> InvoiceMasters { get; set; }
        public DbSet<InvoiceLineMaster> InvoiceLineMasters { get; set; }
        public DbSet<Payment> Payment { get; set; }
        public DbSet<StockMaster> StockMaster { get; set; }
        public DbSet<StockItemMaster> StockItemMasters { get; set; }
        public DbSet<VendorMaster> VendorMasters { get; set; }
        public DbSet<PurchaseItemMaster> PurchaseItemMasters { get; set; }
        public DbSet<PurchaseMaster> PurchaseMasters { get; set; }
        public DbSet<Purchasepay> Purchasepays { get; set; }
    
        public virtual ObjectResult<usp_GetStocks_Result> usp_GetStocks(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStocks_Result>("usp_GetStocks", userIdParameter);
        }
    
        public virtual ObjectResult<usp_GetStocksLines_Result> usp_GetStocksLines(Nullable<int> stockId)
        {
            var stockIdParameter = stockId.HasValue ?
                new ObjectParameter("StockId", stockId) :
                new ObjectParameter("StockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStocksLines_Result>("usp_GetStocksLines", stockIdParameter);
        }
    
        public virtual ObjectResult<usp_DashboardStocks_Result> usp_DashboardStocks(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DashboardStocks_Result>("usp_DashboardStocks", userIdParameter);
        }
    
        public virtual ObjectResult<usp_GetItems_Result> usp_GetItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetItems_Result>("usp_GetItems");
        }
    
        public virtual ObjectResult<usp_GetInvoiceLines_Result> usp_GetInvoiceLines(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetInvoiceLines_Result>("usp_GetInvoiceLines", invoiceIdParameter);
        }
    
        public virtual ObjectResult<usp_GetInvoices_Result> usp_GetInvoices(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetInvoices_Result>("usp_GetInvoices", userIdParameter);
        }
    
        public virtual ObjectResult<rptInvoiceLines_Result> rptInvoiceLines(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptInvoiceLines_Result>("rptInvoiceLines", invoiceIdParameter);
        }
    
        public virtual ObjectResult<rptInvoices_Result> rptInvoices(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptInvoices_Result>("rptInvoices", invoiceIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPurchases_Result> usp_GetPurchases(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPurchases_Result>("usp_GetPurchases", userIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPurchaseLines_Result> usp_GetPurchaseLines(Nullable<int> purchaseId)
        {
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPurchaseLines_Result>("usp_GetPurchaseLines", purchaseIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomer_Result> usp_GetCustomer(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomer_Result>("usp_GetCustomer", userIdParameter);
        }
    
        public virtual ObjectResult<usp_GetVendor_Result> usp_GetVendor(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVendor_Result>("usp_GetVendor", userIdParameter);
        }
    
        public virtual ObjectResult<rptPurchaseItems_Result> rptPurchaseItems(Nullable<int> purchaseId)
        {
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptPurchaseItems_Result>("rptPurchaseItems", purchaseIdParameter);
        }
    
        public virtual ObjectResult<rptPurchases_Result> rptPurchases(Nullable<int> purchaseId)
        {
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptPurchases_Result>("rptPurchases", purchaseIdParameter);
        }
    
        public virtual ObjectResult<rptPurchases1_Result> rptPurchases1(Nullable<int> purchaseId)
        {
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptPurchases1_Result>("rptPurchases1", purchaseIdParameter);
        }
    
        public virtual ObjectResult<rptPurchase_Result> rptPurchase(Nullable<int> purchaseId)
        {
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rptPurchase_Result>("rptPurchase", purchaseIdParameter);
        }
    }
}
